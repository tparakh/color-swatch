# Generated by Django 2.2.17 on 2021-01-21 00:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_color_swatch.color_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='RGBColor',
            fields=[
                ('color_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='color_swatch.Color')),
                ('red', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)])),
                ('green', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)])),
                ('blue', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'unique_together': {('red', 'green', 'blue')},
            },
            bases=('color_swatch.color',),
        ),
        migrations.CreateModel(
            name='HSLColor',
            fields=[
                ('color_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='color_swatch.Color')),
                ('hue', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(0), django.core.validators.MinValueValidator(359)])),
                ('saturation', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(0), django.core.validators.MinValueValidator(100)])),
                ('lightness', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(0), django.core.validators.MinValueValidator(100)])),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'unique_together': {('hue', 'saturation', 'lightness')},
            },
            bases=('color_swatch.color',),
        ),
        migrations.CreateModel(
            name='BRGBColor',
            fields=[
                ('color_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='color_swatch.Color')),
                ('red', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(0), django.core.validators.MinValueValidator(10000)])),
                ('green', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(0), django.core.validators.MinValueValidator(10000)])),
                ('blue', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(0), django.core.validators.MinValueValidator(10000)])),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'unique_together': {('red', 'green', 'blue')},
            },
            bases=('color_swatch.color',),
        ),
    ]
