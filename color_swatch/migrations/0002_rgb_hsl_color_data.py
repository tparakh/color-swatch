# Generated by Django 2.2.17 on 2021-01-20 23:00
import random
from polymorphic.utils import reset_polymorphic_ctype

from django.db import migrations

NUMBER_RANGE = 100
RGB_UPPER_LIMIT = 0
RGB_LOWER_LIMIT = 255

HSL_HUE_UPPER_LIMIT = 0
HSL_HUE_LOWER_LIMIT = 359
HSL_SAT_LIGHT_UPPER_LIMIT = 0
HSL_SAT_LIGHT_LOWER_LIMIT = 100

BRGB_UPPER_LIMIT = 0
BRGB_LOWER_LIMIT = 10000


def generate_different_colors(apps, schema_editor):
    try:
        RGBColor = apps.get_model("color_swatch", "RGBColor")
        HSLColor = apps.get_model("color_swatch", "HSLColor")
        BRGBColor = apps.get_model("color_swatch", "BRGBColor")
    except LookupError:
        print ("Cannot find app to retrieve model")
        return

    ContentType = apps.get_model('contenttypes', 'ContentType')
    rgb_color_ct = ContentType.objects.get_for_model(RGBColor)
    hsl_color_ct = ContentType.objects.get_for_model(HSLColor)
    brgb_color_ct = ContentType.objects.get_for_model(BRGBColor)

    for n in range(NUMBER_RANGE):
        r = lambda: random.randint(RGB_UPPER_LIMIT, RGB_LOWER_LIMIT)
        r, g, b = (r(), r(), r())
        color, _ = RGBColor.objects.get_or_create(red=r, green=g, blue=b)
    RGBColor.objects.filter(polymorphic_ctype__isnull=True).update(polymorphic_ctype=rgb_color_ct)

    for n in range(NUMBER_RANGE):
        h = lambda: random.randint(HSL_HUE_UPPER_LIMIT, HSL_HUE_LOWER_LIMIT)
        s = lambda: random.randint(HSL_SAT_LIGHT_UPPER_LIMIT, HSL_SAT_LIGHT_LOWER_LIMIT)
        h, s, l = (h(), s(), s())
        color, _ = HSLColor.objects.get_or_create(hue=h, saturation=s, lightness=l)
    HSLColor.objects.filter(polymorphic_ctype__isnull=True).update(polymorphic_ctype=hsl_color_ct)

    for n in range(NUMBER_RANGE):
        r = lambda: random.randint(BRGB_UPPER_LIMIT, BRGB_LOWER_LIMIT)
        r, g, b = (r(), r(), r())
        color, _ = BRGBColor.objects.get_or_create(red=r, green=g, blue=b)
    BRGBColor.objects.filter(polymorphic_ctype__isnull=True).update(polymorphic_ctype=brgb_color_ct)


class Migration(migrations.Migration):
    dependencies = [
        ('color_swatch', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(generate_different_colors, migrations.RunPython.noop)
    ]
